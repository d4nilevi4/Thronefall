//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSurfaceNormal;

    public static Entitas.IMatcher<GameEntity> SurfaceNormal {
        get {
            if (_matcherSurfaceNormal == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.SurfaceNormal);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSurfaceNormal = matcher;
            }

            return _matcherSurfaceNormal;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Thronefall.Gameplay.Movement.SurfaceNormal surfaceNormal { get { return (Thronefall.Gameplay.Movement.SurfaceNormal)GetComponent(GameComponentsLookup.SurfaceNormal); } }
    public UnityEngine.Vector3 SurfaceNormal { get { return surfaceNormal.Value; } }
    public bool hasSurfaceNormal { get { return HasComponent(GameComponentsLookup.SurfaceNormal); } }

    public GameEntity AddSurfaceNormal(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.SurfaceNormal;
        var component = (Thronefall.Gameplay.Movement.SurfaceNormal)CreateComponent(index, typeof(Thronefall.Gameplay.Movement.SurfaceNormal));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceSurfaceNormal(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.SurfaceNormal;
        var component = (Thronefall.Gameplay.Movement.SurfaceNormal)CreateComponent(index, typeof(Thronefall.Gameplay.Movement.SurfaceNormal));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveSurfaceNormal() {
        RemoveComponent(GameComponentsLookup.SurfaceNormal);
        return this;
    }
}
