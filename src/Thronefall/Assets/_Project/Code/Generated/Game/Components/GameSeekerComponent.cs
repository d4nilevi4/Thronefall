//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherSeeker;

    public static Entitas.IMatcher<GameEntity> Seeker {
        get {
            if (_matcherSeeker == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Seeker);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherSeeker = matcher;
            }

            return _matcherSeeker;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Thronefall.Gameplay.Navigation.SeekerComponent seeker { get { return (Thronefall.Gameplay.Navigation.SeekerComponent)GetComponent(GameComponentsLookup.Seeker); } }
    public Pathfinding.Seeker Seeker { get { return seeker.Value; } }
    public bool hasSeeker { get { return HasComponent(GameComponentsLookup.Seeker); } }

    public GameEntity AddSeeker(Pathfinding.Seeker newValue) {
        var index = GameComponentsLookup.Seeker;
        var component = (Thronefall.Gameplay.Navigation.SeekerComponent)CreateComponent(index, typeof(Thronefall.Gameplay.Navigation.SeekerComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceSeeker(Pathfinding.Seeker newValue) {
        var index = GameComponentsLookup.Seeker;
        var component = (Thronefall.Gameplay.Navigation.SeekerComponent)CreateComponent(index, typeof(Thronefall.Gameplay.Navigation.SeekerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveSeeker() {
        RemoveComponent(GameComponentsLookup.Seeker);
        return this;
    }
}
