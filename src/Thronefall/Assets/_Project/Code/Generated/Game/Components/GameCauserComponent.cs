//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCauser;

    public static Entitas.IMatcher<GameEntity> Causer {
        get {
            if (_matcherCauser == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Causer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCauser = matcher;
            }

            return _matcherCauser;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Thronefall.Gameplay.Combat.Causer causer { get { return (Thronefall.Gameplay.Combat.Causer)GetComponent(GameComponentsLookup.Causer); } }
    public int Causer { get { return causer.Value; } }
    public bool hasCauser { get { return HasComponent(GameComponentsLookup.Causer); } }

    public GameEntity AddCauser(int newValue) {
        var index = GameComponentsLookup.Causer;
        var component = (Thronefall.Gameplay.Combat.Causer)CreateComponent(index, typeof(Thronefall.Gameplay.Combat.Causer));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceCauser(int newValue) {
        var index = GameComponentsLookup.Causer;
        var component = (Thronefall.Gameplay.Combat.Causer)CreateComponent(index, typeof(Thronefall.Gameplay.Combat.Causer));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveCauser() {
        RemoveComponent(GameComponentsLookup.Causer);
        return this;
    }
}
